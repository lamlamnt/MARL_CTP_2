#Generate inference graphs for node_10_agent_1 prop 0.4 and node_10_agent_2 prop 0.4 and 0.8
CUDA_VISIBLE_DEVICES="" python main.py --n_node 10 --n_agent 1 --time_steps 100000 --network_type "Densenet_Same" --log_directory "store" --graph_mode "store" --num_steps_before_update 100 --densenet_num_layers "2,2,2" --densenet_bn_size 2 --densenet_growth_rate 10 --frequency_testing 10 --graph_identifier "node_10_agent_1_prop_0.4_inference" --prop_stoch 0.4 --num_stored_graphs 10 --factor_inference_timesteps 2000
CUDA_VISIBLE_DEVICES="" python main.py --n_node 10 --n_agent 2 --time_steps 100000 --network_type "Densenet_Same" --log_directory "store" --graph_mode "store" --num_steps_before_update 100 --densenet_num_layers "2,2,2" --densenet_bn_size 2 --densenet_growth_rate 10 --frequency_testing 10 --graph_identifier "node_10_agent_2_prop_0.4_inference" --prop_stoch 0.4 --num_stored_graphs 10 --factor_inference_timesteps 2000
CUDA_VISIBLE_DEVICES="" python main.py --n_node 10 --n_agent 2 --time_steps 100000 --network_type "Densenet_Same" --log_directory "store" --graph_mode "store" --num_steps_before_update 100 --densenet_num_layers "2,2,2" --densenet_bn_size 2 --densenet_growth_rate 10 --frequency_testing 10 --graph_identifier "node_10_agent_2_prop_0.8_inference" --prop_stoch 0.8 --num_stored_graphs 10 --factor_inference_timesteps 2000

