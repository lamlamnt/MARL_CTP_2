#Generate graphs for 20 nodes and 4 agents
CUDA_VISIBLE_DEVICES="" python main.py --n_node 20 --n_agent 4 --time_steps 100000 --network_type "Densenet_Same" --log_directory "store" --graph_mode "store" --num_steps_before_update 100 --densenet_num_layers "2,2,2" --densenet_bn_size 2 --densenet_growth_rate 10 --frequency_testing 10 --graph_identifier "node_20_agent_4_prop_0.8_random_1" --prop_stoch 0.8 --num_stored_graphs 10000 --factor_inference_timesteps 2000 --random_seed_for_training 1 --random_seed_for_inference 2
CUDA_VISIBLE_DEVICES="" python main.py --n_node 20 --n_agent 4 --time_steps 100000 --network_type "Densenet_Same" --log_directory "store" --graph_mode "store" --num_steps_before_update 100 --densenet_num_layers "2,2,2" --densenet_bn_size 2 --densenet_growth_rate 10 --frequency_testing 10 --graph_identifier "node_20_agent_4_prop_0.8_random_3" --prop_stoch 0.8 --num_stored_graphs 10000 --factor_inference_timesteps 2000 --random_seed_for_training 3 --random_seed_for_inference 4
CUDA_VISIBLE_DEVICES="" python main.py --n_node 20 --n_agent 4 --time_steps 100000 --network_type "Densenet_Same" --log_directory "store" --graph_mode "store" --num_steps_before_update 100 --densenet_num_layers "2,2,2" --densenet_bn_size 2 --densenet_growth_rate 10 --frequency_testing 10 --graph_identifier "node_20_agent_4_prop_0.8_random_5" --prop_stoch 0.8 --num_stored_graphs 10000 --factor_inference_timesteps 2000 --random_seed_for_training 5 --random_seed_for_inference 6
